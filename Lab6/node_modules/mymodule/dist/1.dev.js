"use strict";

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var modulename = _interopRequireWildcard(require("./FE4U_Lab3_mock.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function course() {
  var ar = ["Mathematics", "Physics", "English", "Computer Science", "Dancing", "Chess", "Biology", "Chemistry", "Law", "Art", "Medicine", "Statistics"]; //a=0 b=11

  var im = Math.floor(Math.random() * (11 - 0 + 1)) + 0;
  return ar[im];
}

function task1(name) {
  var array1 = Array.from(name.randomUserMock);
  var array3 = [];

  for (var i = 0; i < array1.length; i++) {
    var a = array1[i];
    var b = {};
    b.gender = a.gender;
    b["title"] = a.name.title;
    b.full_name = a.name.first + " " + a.name.last;
    b.city = a.location.city;
    b.state = a.location.state;
    b.country = a.location.country;
    b.postcode = a.location.postcode;
    b.coordinates = a.location.coordinates;
    b.timezone = a.location.timezone;
    b.email = a.email;
    b.b_date = a.dob.date;
    b.age = a.dob.age;
    b.phone = a.phone;
    b.picture_large = a.picture.large;
    b.picture_thumbnail = a.picture.thumbnail;
    array3[i] = b;
  }

  for (var _i = 0; _i < array1.length; _i++) {
    array3[_i].id = array1[_i].id.name + array1[_i].id.value;
    array3[_i].favorite = false;
    array3[_i].course = null; //course();

    array3[_i].bg_color = "#dface7";
    array3[_i].note = "Note";
  }

  var array2 = Array.from(name.additionalUsers);
  var array_result = array3.concat(array2);

  for (var _i2 = 0; _i2 < array_result.length; _i2++) {
    for (var j = _i2 + 1; j < array_result.length; j++) {
      if (array_result[_i2].full_name == array_result[j].full_name) {
        array_result.splice(j, 1);
      }
    }

    if (array_result[_i2].course == null) {
      array_result[_i2].course = course();
    }
  }

  console.log(array1.length + "+" + array2.length + "=" + array_result.length);
  return array_result;
}

function check(a, por) {
  if (por == 1) {
    if (a == undefined) return false;
    if (a == null) return false;
    if (typeof a != "string") return false;
    if (a.substring(0, 1) == a.substring(0, 1).toUpperCase()) return true;
  }

  if (por == 2) {
    if (a == undefined) return false;
    if (a == null) return false;
    if (typeof a != "string") return false;
    return true;
  }

  if (por == 3) {
    if (a == undefined) return false;
    if (a == null) return false;
    if (typeof a != "number") return false;
    return true;
  }

  if (por == 4) {
    if (a == undefined) return false;
    if (a == null) return false;
    if (typeof a != "string") return false;
    var exp = /@/;
    return exp.test(a);
  }
}

function task2(ar) {
  for (var i = 0; i < ar.length; i++) {
    var a = ar[i].full_name;
    var b = ar[i].state;
    var c = ar[i].city;
    var d = ar[i].country;
    var e = ar[i].note;
    var f = ar[i].gender;
    var g = ar[i].age;
    var m = ar[i].email;
    var result = false;

    if (check(a, 1) && check(b, 1) && check(c, 1) && check(d, 1) && check(e, 1) && check(f, 2) && check(g, 3) && check(m, 4)) {
      result = true;
    }

    ar[i].check = result;
  }
}

function task3(ar, p_country, p_age, p_gender, p_favorite) {
  var res = ar.slice();

  if (p_country != null && p_country != undefined) {
    var res1 = res.filter(function (country) {
      return country.country == p_country;
    });
    res = res1;
  }

  if (p_age != null && p_age != undefined) {
    var _res = res.filter(function (country) {
      return country.age == p_age;
    });

    res = _res;
  }

  if (p_gender != null && p_gender != undefined) {
    var _res2 = res.filter(function (country) {
      return country.gender == p_gender;
    });

    res = _res2;
  }

  if (p_favorite != null && p_favorite != undefined) {
    var _res3 = res.filter(function (country) {
      return country.favorite == p_favorite;
    });

    res = _res3;
  }

  return res;
}

function task31(ar, p_country, p_age, p_gender, p_favorite) {
  var res = ar.slice();
  var res1 = res.filter(function (ob) {
    return ob.country == p_country && ob.age == p_age && ob.gender == p_gender && ob.favorite == p_favorite;
  });
  return res1;
}

function task4(ar, field, sort) {
  if (field == "full_name") {
    if (sort == "abc") {
      return ar.sort(function (a, b) {
        var fa = a.full_name.toLowerCase(),
            fb = b.full_name.toLowerCase();

        if (fa < fb) {
          return -1;
        }

        if (fa > fb) {
          return 1;
        }

        return 0;
      });
    } else {
      return ar.sort(function (a, b) {
        var fa = a.full_name.toLowerCase(),
            fb = b.full_name.toLowerCase();

        if (fa < fb) {
          return 1;
        }

        if (fa > fb) {
          return -1;
        }

        return 0;
      });
    }
  }

  if (field == "age") {
    if (sort == "abc") {
      return ar.sort(function (ob1, ob2) {
        return ob1.age - ob2.age;
      });
    } else {
      return ar.sort(function (ob1, ob2) {
        return ob2.age - ob1.age;
      });
    }
  }

  if (field == "country") {
    if (sort == "abc") {
      return ar.sort(function (a, b) {
        var fa = a.country.toLowerCase(),
            fb = b.country.toLowerCase();

        if (fa < fb) {
          return -1;
        }

        if (fa > fb) {
          return 1;
        }

        return 0;
      });
    } else {
      return ar.sort(function (a, b) {
        var fa = a.full_name.toLowerCase(),
            fb = b.full_name.toLowerCase();

        if (fa < fb) {
          return 1;
        }

        if (fa > fb) {
          return -1;
        }

        return 0;
      });
    }
  }

  if (field == "b_date") {
    if (sort == "abc") {
      return ar.sort(function (a, b) {
        var da = new Date(a.b_date),
            db = new Date(b.b_date);
        return da - db;
      });
    } else {
      return ar.sort(function (a, b) {
        var da = new Date(a.b_date),
            db = new Date(b.b_date);
        return db - da;
      });
    }
  }
}

function task5(ar, field, value) {
  var ob = {};

  if (field == "note") {
    ob = ar.find(function (a) {
      return a.note == value;
    });
  }

  if (field == "age") {
    ob = ar.find(function (a) {
      return a.age == value;
    });
  }

  if (field == "name") {
    ob = ar.find(function (a) {
      return a.name == value;
    });
  }

  return ob;
}

function task6(ar, where, p_age) {
  var res = ar.slice();

  if (where == "=") {
    var res1 = res.filter(function (country) {
      return country.age == p_age;
    });
    res = res1;
  }

  if (where == ">") {
    var _res4 = res.filter(function (country) {
      return country.age > p_age;
    });

    res = _res4;
  }

  if (where == "<") {
    var _res5 = res.filter(function (country) {
      return country.age < p_age;
    });

    res = _res5;
  }

  if (where == ">=") {
    var _res6 = res.filter(function (country) {
      return country.age >= p_age;
    });

    res = _res6;
  }

  if (where == "<=") {
    var _res7 = res.filter(function (country) {
      return country.age <= p_age;
    });

    res = _res7;
  }

  return res.length / ar.length * 100;
}

var resarray = task1(modulename); //console.log(resarray);
//task2(resarray);
//console.log("2-task");
//console.log(resarray);

console.log("3-task");
console.log(task3(resarray, "Turkey", 40, "male", false));
console.log(task31(resarray, "Turkey", 40, "male", false)); //console.log("4-task");
//console.log(task4(resarray,"b_date","abc"));
//console.log("5-task");
//console.log(task5(resarray,"note","Note"));
//console.log(task5(resarray,"age",73));
//console.log("6-task");
//console.log(task6(resarray,"<=",27));
//# sourceMappingURL=1.dev.js.map
